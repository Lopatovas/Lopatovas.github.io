{"version":3,"sources":["config/navRoutes.js","components/navBar/index.js","components/libraryCard/index.js","containers/Home/index.js","components/formWrapper/index.js","components/input/index.js","containers/Register/index.js","containers/Login/index.js","containers/BookDetails/index.js","components/bookCard/index.js","containers/Library/index.js","containers/LibraryDetails/index.js","containers/UserDetails/index.js","App.js","serviceWorker.js","index.js"],"names":["navBarRoutes","SIGNED_IN","name","url","action","e","preventDefault","localStorage","clear","console","log","DEFAULT","NavBar","props","routes","className","map","route","i","key","href","onClick","to","defaultProps","LibraryCard","cardHeader","cardDescription","buttonTitle","id","Home","state","getItem","React","Component","FormWrapper","children","callBack","submitText","handleSubmit","type","Input","labelText","htmlFor","Register","submitForm","bind","history","this","setItem","push","placeholder","Login","BookDetails","BookCard","title","description","facts","src","alt","fact","Library","LibraryDetails","UserDetails","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d3f8abf.chunk.js","sourcesContent":["const navBarRoutes = {\n  SIGNED_IN: [\n    { name: 'Home', url: '/' },\n    {\n      name: 'Log Out',\n      url: '/',\n      action: (e) => {\n        e.preventDefault();\n        localStorage.clear();\n        console.log('logging out');\n      },\n    },\n  ],\n  DEFAULT: [\n    { name: 'Home', url: '/' },\n    { name: 'Register', url: '/Register' },\n    { name: 'Login', url: '/Login' },\n  ],\n};\n\nexport default navBarRoutes;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction NavBar(props) {\n  const { routes } = props;\n  return (\n    <div className=\"shadow-sm mb-5 bg-white rounded\">\n      <ul className=\"nav flex-row justify-content-center\">\n        {routes.map((route, i) => (\n          <li className=\"nav-item\" key={i}>\n            {route.action ? <a className=\"nav-link\" href=\"/\" onClick={(e) => { route.action(e); }}>Log out</a> : <Link className=\"nav-link\" to={route.url}>{route.name}</Link>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nNavBar.defaultProps = {\n  routes: [],\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction LibraryCard(props) {\n  const {\n    cardHeader, cardDescription, buttonTitle, id,\n  } = props;\n  return (\n    <div className=\"shadow-lg p-3 bg-white rounded card mb-2\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{cardHeader}</h5>\n        <p className=\"card-text\">{cardDescription}</p>\n        <Link className=\"btn btn-light\" to={`/Library/${id}`}>{buttonTitle}</Link>\n      </div>\n    </div>\n  );\n}\n\nLibraryCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardDescription: PropTypes.string,\n  buttonTitle: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\nLibraryCard.defaultProps = {\n  cardHeader: '',\n  cardDescription: '',\n  buttonTitle: '',\n};\n\nexport default LibraryCard;\n","import React from 'react';\n\nimport navBarRoutes from '../../config/navRoutes';\n\nimport NavBar from '../../components/navBar';\nimport LibraryCard from '../../components/libraryCard';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        {localStorage.getItem('isUser') ? <NavBar routes={navBarRoutes.SIGNED_IN} /> : <NavBar routes={navBarRoutes.DEFAULT} />}\n        <div className=\"container\">\n          <LibraryCard\n            cardHeader=\"Amazing library v1.0\"\n            cardDescription=\"Best ever\"\n            buttonTitle=\"Lego\"\n            id=\"1\"\n          />\n          <LibraryCard\n            cardHeader=\"Amazing library v2.0\"\n            cardDescription=\"Best ever\"\n            buttonTitle=\"Lego\"\n            id=\"2\"\n          />\n          <LibraryCard\n            cardHeader=\"Amazing library v3.0\"\n            cardDescription=\"Best ever\"\n            buttonTitle=\"Lego\"\n            id=\"3\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FormWrapper(props) {\n  const { children, callBack, submitText } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    callBack();\n  };\n  return (\n    <form className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n      {children}\n      <button onClick={(e) => { handleSubmit(e); }} type=\"button\" className=\"btn btn-light\">\n        {submitText}\n      </button>\n    </form>\n  );\n}\n\nFormWrapper.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object),\n  submitText: PropTypes.string,\n  callBack: PropTypes.func.isRequired,\n};\n\nFormWrapper.defaultProps = {\n  children: [],\n  submitText: 'Submit',\n};\n\nexport default FormWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input(props) {\n  const {\n    labelText, id, children,\n  } = props;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id}>{labelText}</label>\n      {children}\n    </div>\n  );\n}\n\nInput.propTypes = {\n  labelText: PropTypes.string,\n  id: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nInput.defaultProps = {\n  labelText: '',\n  id: '',\n\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport navBarRoutes from '../../config/navRoutes';\n\nimport NavBar from '../../components/navBar';\nimport FormWrapper from '../../components/formWrapper';\nimport Input from '../../components/input';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {};\n  }\n\n  submitForm() {\n    const { history } = this.props;\n    localStorage.setItem('isUser', 'yes');\n    history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar routes={navBarRoutes.DEFAULT} />\n        <div className=\"container\">\n          <FormWrapper callBack={this.submitForm}>\n            <Input labelText=\"Email\" id=\"emailField\">\n              <input type=\"email\" className=\"form-control\" id=\"emailField\" placeholder=\"name@example.com\" />\n            </Input>\n            <Input labelText=\"Password\" id=\"passwordField\">\n              <input type=\"password\" className=\"form-control\" id=\"passwordField\" placeholder=\"\" />\n            </Input>\n          </FormWrapper>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default Register;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport navBarRoutes from '../../config/navRoutes';\n\nimport NavBar from '../../components/navBar';\nimport FormWrapper from '../../components/formWrapper';\nimport Input from '../../components/input';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {};\n  }\n\n  submitForm() {\n    const { history } = this.props;\n    localStorage.setItem('isUser', 'yes');\n    history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar routes={navBarRoutes.DEFAULT} />\n        <div className=\"container\">\n          <FormWrapper callBack={this.submitForm}>\n            <Input labelText=\"Email\" id=\"emailField\">\n              <input type=\"email\" className=\"form-control\" id=\"emailField\" placeholder=\"name@example.com\" />\n            </Input>\n            <Input labelText=\"Password\" id=\"passwordField\">\n              <input type=\"password\" className=\"form-control\" id=\"passwordField\" placeholder=\"\" />\n            </Input>\n          </FormWrapper>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default Login;\n","import React from 'react';\n\nclass BookDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <div>In BookDetails</div>\n      </div>\n    );\n  }\n}\n\nexport default BookDetails;\n","// eslint-disable-next-line react/no-array-index-key\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction BookCard(props) {\n  const {\n    title, description, facts, buttonTitle, id,\n  } = props;\n  return (\n    <div className=\"flex-fill shadow-lg p-3 bg-white rounded card m-2\">\n      <img src=\"https://thumbs-prod.si-cdn.com/T_txo7Wkgu6aPjd6a8thp1kDL2s=/420x240/https://public-media.si-cdn.com/filer/91/91/91910c23-cae4-46f8-b7c9-e2b22b8c1710/lostbook.jpg\" className=\"card-img-top\" alt=\"...\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        {facts.map((fact, i) => (<li className=\"list-group-item\" key={i}>{fact}</li>))}\n      </ul>\n      <div className=\"card-body\">\n        <Link className=\"btn btn-light\" to={`/Book/${id}`}>{buttonTitle}</Link>\n      </div>\n    </div>\n  );\n}\n\nBookCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  facts: PropTypes.arrayOf(PropTypes.object),\n  buttonTitle: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\nBookCard.defaultProps = {\n  title: '',\n  description: '',\n  facts: [],\n  buttonTitle: '',\n};\n\nexport default BookCard;\n","import React from 'react';\nimport navBarRoutes from '../../config/navRoutes';\n\nimport NavBar from '../../components/navBar';\nimport BookCard from '../../components/bookCard';\n\nclass Library extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        {localStorage.getItem('isUser') ? <NavBar routes={navBarRoutes.SIGNED_IN} /> : <NavBar routes={navBarRoutes.DEFAULT} />}\n        <div className=\"container d-flex\">\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.1\"\n            description=\"Yeah, pretty good\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Library;\n","import React from 'react';\n\nclass LibraryDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <div>In LibraryDetails</div>\n      </div>\n    );\n  }\n}\n\nexport default LibraryDetails;\n","import React from 'react';\n\nclass UserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <div>In UserDetails</div>\n      </div>\n    );\n  }\n}\n\nexport default UserDetails;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Home from './containers/Home';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\nimport BookDetails from './containers/BookDetails';\nimport Library from './containers/Library';\nimport LibraryDetails from './containers/LibraryDetails';\nimport UserDetails from './containers/UserDetails';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/Register\" component={Register} />\n          <Route path=\"/Login\" component={Login} />\n          <Route path=\"/Book/:id\" component={BookDetails} />\n          <Route path=\"/Library/:id\" component={Library} />\n          <Route path=\"/Library/:id/Details\" component={LibraryDetails} />\n          <Route path=\"/User/:id\" component={UserDetails} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}