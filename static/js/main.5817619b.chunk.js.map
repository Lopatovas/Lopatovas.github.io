{"version":3,"sources":["react/containers/contacts/components/detailsSection/styles.module.css","react/containers/contacts/styles.module.css","react/components/checkbox/styles.module.css","react/components/loader/styles.module.css","react/containers/contacts/components/filterSection/styles.module.css","react/containers/contacts/components/filterPopup/styles.module.css","react/components/button/styles.module.css","react/components/appLogo/styles.module.css","react/components/input/styles.module.css","react/components/dropdown/styles.module.css","react/containers/contacts/components/tableSection/styles.module.css","api/config.ts","api/ContactService/contactService.ts","redux/contact/thunk.ts","redux/contact/slice.ts","redux/contact/selectors.ts","react/components/loader/loader.tsx","react/components/button/button.tsx","react/components/appLogo/appLogo.tsx","react/components/input/input.tsx","react/components/dropdown/dropdown.tsx","react/components/checkbox/checkbox.tsx","react/containers/contacts/components/filterSection/filterSection.tsx","react/containers/contacts/utils/nameFormatter.ts","react/containers/contacts/components/filterPopup/filterPopup.tsx","react/containers/contacts/components/tableSection/tableSection.tsx","react/containers/contacts/components/detailsSection/detailsSection.tsx","react/assets/userpic.jpg","react/containers/contacts/utils/contactSorter.ts","react/containers/contacts/connect.ts","react/containers/contacts/contacts.tsx","react/containers/contacts/utils/contactFilter.ts","react/App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","ENDPOINTS","CONTACT","process","CONTACT_DETAILS","id","ContactService","axios","get","fetchContactsAsync","createAsyncThunk","a","response","data","fetchContactByIdAsync","contactSlice","createSlice","name","initialState","contacts","status","statusDetails","isContactsFetched","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","contactDetails","undefined","getContacts","contact","getIsContactsLoading","getIsContactsFetched","getIsContactDetailsLoading","getContactDetails","Loader","props","isLoading","children","isAbsolute","className","styles","loader","absolute","Button","onPress","onClick","type","btn","AppLogo","logoStyle","Input","placeholder","onChange","value","inputWrapper","e","styleConfig","container","provided","outline","color","dropdownIndicator","isFocused","padding","indicatorSeparator","singleValue","input","valueContainer","control","backgroundColor","border","borderRadius","borderBottom","fontSize","transition","boxShadow","cursor","Dropdown","options","selectedOption","onSelected","Checkbox","label","icon","isChecked","setIsChecked","wrapper","htmlFor","defaultChecked","iconSpacing","checkmark","FilterSection","dropdownOptions","onFilterCallback","useState","nameQuery","setNameQuery","cityQuery","setCityQuery","isActiveQuerry","setIsActiveQuerry","target","faEye","buttonWrapper","isActive","formatName","surname","substr","getFullName","FilterPopup","activeFields","onValueChange","filterModal","Object","keys","map","field","result","toggleField","filterModalLabel","TableSection","onCellPress","activeContactId","onSortPress","isAscending","Name","City","Email","Phone","setActiveFields","isFilterPopupActive","setIsFilterPopupActive","table","tableActive","tableHeader","iconSeperator","faArrowDown","faArrowUp","prev","activeFilter","faList","tableRow","tableRowDark","tableRowActiveDark","tableRowActive","city","faEyeSlash","email","phone","DetailsSection","photoUrl","content","imageContainer","src","alt","image","detailsContainer","href","sortByName","ascending","sortedAsc","sort","b","aFullName","bFullName","reverse","Contacts","connect","isFetched","isContactDetailsLoading","dispatch","contactsLocal","setContactsLocal","setIsAscending","useEffect","shouldShowDetails","find","background","mainSection","filter","filterByActive","filterByCity","query","toLowerCase","includes","filterByName","cnt","asc","flexGrid","userPic","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5817619b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__39CjI\",\"content\":\"styles_content__DRmIN\",\"image\":\"styles_image__967WA\",\"imageContainer\":\"styles_imageContainer__2fzwY\",\"detailsContainer\":\"styles_detailsContainer__3wSbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"styles_background__30A4L\",\"container\":\"styles_container__1qGUp\",\"mainSection\":\"styles_mainSection__mLgw6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3QrP5\",\"container\":\"styles_container__2Uu4f\",\"iconSpacing\":\"styles_iconSpacing__2rp90\",\"checkmark\":\"styles_checkmark__E0WrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__3pD88\",\"spin\":\"styles_spin__2Vbi1\",\"absolute\":\"styles_absolute__ofJuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2NJns\",\"buttonWrapper\":\"styles_buttonWrapper__f8WiS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterModal\":\"styles_filterModal__2nEYf\",\"filterModalLabel\":\"styles_filterModalLabel__1gkIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__3eMW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoStyle\":\"styles_logoStyle__2eN7S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"styles_inputWrapper__naMGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3618L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"styles_table__S9X3N\",\"tableHeader\":\"styles_tableHeader__316Nu\",\"tableRow\":\"styles_tableRow__3ytxU\",\"activeFilter\":\"styles_activeFilter__72RFZ\",\"tableRowDark\":\"styles_tableRowDark__1CCuP\",\"tableRowActive\":\"styles_tableRowActive__97pua\",\"tableRowActiveDark\":\"styles_tableRowActiveDark__37LqN\",\"tableActive\":\"styles_tableActive__97lLm\",\"iconSeperator\":\"styles_iconSeperator__2U6oC\"};","const ROOT_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst ENDPOINTS = {\r\n  CONTACT: `${ROOT_URL}/contacts`,\r\n  CONTACT_DETAILS: (id: string | number) => `${ENDPOINTS.CONTACT}/${id}`,\r\n};\r\n\r\nexport { ENDPOINTS };\r\n","import axios from \"axios\";\r\nimport { ENDPOINTS } from \"../config\";\r\n\r\nconst fetchContactsAsync = () => axios.get(ENDPOINTS.CONTACT);\r\nconst fetchContactByIdAsync = (id: string) =>\r\n  axios.get(ENDPOINTS.CONTACT_DETAILS(id));\r\n\r\nexport const ContactService = { fetchContactsAsync, fetchContactByIdAsync };\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { ContactService } from \"../../api/ContactService\";\r\n\r\nconst fetchContactsAsync = createAsyncThunk(\r\n  \"contact/fetchContactsAsync\",\r\n  async () => {\r\n    const response = await ContactService.fetchContactsAsync();\r\n    return response.data;\r\n  }\r\n);\r\n\r\nconst fetchContactByIdAsync = createAsyncThunk(\r\n  \"contact/fetchContactByIdAsync\",\r\n  async (id: string) => {\r\n    const response = await ContactService.fetchContactByIdAsync(id);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport { fetchContactsAsync, fetchContactByIdAsync };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { fetchContactByIdAsync, fetchContactsAsync } from \"./thunk\";\r\nimport { ContactState } from \"./types\";\r\n\r\nconst initialState: ContactState = {\r\n  contacts: [],\r\n  status: \"idle\",\r\n  statusDetails: \"idle\",\r\n  isContactsFetched: false,\r\n};\r\n\r\nconst contactSlice = createSlice({\r\n  name: \"contacts\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchContactsAsync.pending, (state) => {\r\n        state.status = \"loading\";\r\n        state.isContactsFetched = false;\r\n      })\r\n      .addCase(fetchContactsAsync.fulfilled, (state, action) => {\r\n        state.status = \"idle\";\r\n        state.contacts = action.payload;\r\n        state.isContactsFetched = true;\r\n      })\r\n      .addCase(fetchContactsAsync.rejected, (state) => {\r\n        state.status = \"failed\";\r\n        state.isContactsFetched = false;\r\n      })\r\n      .addCase(fetchContactByIdAsync.pending, (state) => {\r\n        state.statusDetails = \"loading\";\r\n      })\r\n      .addCase(fetchContactByIdAsync.fulfilled, (state, action) => {\r\n        state.statusDetails = \"idle\";\r\n        state.contactDetails = action.payload;\r\n      })\r\n      .addCase(fetchContactByIdAsync.rejected, (state) => {\r\n        state.statusDetails = \"failed\";\r\n        state.contactDetails = undefined;\r\n      });\r\n  },\r\n});\r\n\r\nexport { contactSlice };\r\n","import { RootState } from \"../store\";\r\n\r\nconst getContacts = (state: RootState) => state.contact.contacts;\r\n\r\nconst getIsContactsLoading = (state: RootState) =>\r\n  state.contact.status === \"loading\";\r\n\r\nconst getIsContactsFetched = (state: RootState) =>\r\n  state.contact.isContactsFetched;\r\n\r\nconst getIsContactDetailsLoading = (state: RootState) =>\r\n  state.contact.statusDetails === \"loading\";\r\n\r\nconst getContactDetails = (state: RootState) => state.contact.contactDetails;\r\n\r\nexport {\r\n  getContacts,\r\n  getIsContactsLoading,\r\n  getIsContactsFetched,\r\n  getIsContactDetailsLoading,\r\n  getContactDetails,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport ILoaderProps from \"./types\";\r\n\r\nconst Loader = (props: ILoaderProps) => {\r\n  const { isLoading, children, isAbsolute } = props;\r\n\r\n  if (isLoading)\r\n    return (\r\n      <div className={`${styles.loader} ${isAbsolute && styles.absolute}`} />\r\n    );\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport { Loader };\r\n","import React from \"react\";\r\nimport IButtonProps from \"./types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Button = (props: IButtonProps) => {\r\n  const { onPress, children } = props;\r\n\r\n  return (\r\n    <button onClick={onPress} type=\"button\" className={styles.btn}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Button };\r\n","import React from \"react\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst AppLogo = () => <div className={styles.logoStyle}>CONTACTIFY</div>;\r\n\r\nexport { AppLogo };\r\n","import React from \"react\";\r\nimport IInputProps from \"./types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst Input = (props: IInputProps) => {\r\n  const { id, type, placeholder, onChange, value } = props;\r\n\r\n  return (\r\n    <div className={styles.inputWrapper}>\r\n      <input\r\n        type={type}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        onChange={(e) => onChange(e)}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Input };\r\n","import React from \"react\";\r\nimport Select, { StylesConfig } from \"react-select\";\r\nimport { IDropdownProps, IDropdownOption } from \"./types\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst styleConfig: StylesConfig<IDropdownOption, false> = {\r\n  container: (provided) => ({\r\n    ...provided,\r\n    outline: \"none\",\r\n  }),\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: \"var(--white)\",\r\n  }),\r\n  dropdownIndicator: (provided, state) => ({\r\n    ...provided,\r\n    color: state.isFocused ? \"var(--accent)\" : \"var(--white)\",\r\n    padding: \"0\",\r\n    \":hover\": {\r\n      color: \"var(--accent)\",\r\n    },\r\n  }),\r\n  indicatorSeparator: () => ({}),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: \"var(--white)\",\r\n  }),\r\n  input: (provided) => ({\r\n    ...provided,\r\n    color: \"var(--white)\",\r\n  }),\r\n  valueContainer: (provided) => ({\r\n    ...provided,\r\n    padding: \"0\",\r\n  }),\r\n  control: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: \"transparent\",\r\n    border: \"0\",\r\n    borderRadius: \"0\",\r\n    borderBottom: state.isFocused\r\n      ? \"1px solid var(--accent)\"\r\n      : \"1px solid var(--white)\",\r\n    color: \"var(--white)\",\r\n    fontSize: \"14px\",\r\n    outline: \"none\",\r\n    transition: \"all 0.3s linear\",\r\n    boxShadow: \"none\",\r\n    \":hover\": {\r\n      borderBottom: \"1px solid var(--accent)\",\r\n      cursor: \"pointer\",\r\n    },\r\n  }),\r\n};\r\n\r\nconst Dropdown = (props: IDropdownProps) => {\r\n  const { options, selectedOption, onSelected } = props;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Select\r\n        styles={styleConfig}\r\n        value={selectedOption}\r\n        onChange={onSelected}\r\n        options={options}\r\n        placeholder=\"City\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Dropdown };\r\n","import React from \"react\";\r\nimport ICheckboxProps from \"./types\";\r\nimport styles from \"./styles.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Checkbox = (props: ICheckboxProps) => {\r\n  const { label, id, icon, isChecked, setIsChecked } = props;\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <label htmlFor={id} className={styles.container}>\r\n        {label}\r\n        <input\r\n          type=\"checkbox\"\r\n          id={id}\r\n          defaultChecked={isChecked}\r\n          onClick={setIsChecked}\r\n        />\r\n        {icon && <FontAwesomeIcon icon={icon} className={styles.iconSpacing} />}\r\n        <span className={styles.checkmark} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Checkbox };\r\n","import { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Checkbox, Dropdown, Input } from \"../../../../components\";\r\nimport styles from \"./styles.module.css\";\r\nimport IFilterSectionProps from \"./types\";\r\n\r\nconst FilterSection = (props: IFilterSectionProps) => {\r\n  const { dropdownOptions, onFilterCallback } = props;\r\n\r\n  const [nameQuery, setNameQuery] = useState<string | undefined>(undefined);\r\n  const [cityQuery, setCityQuery] = useState<string | undefined>(undefined);\r\n  const [isActiveQuerry, setIsActiveQuerry] =\r\n    useState<boolean | undefined>(undefined);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Input\r\n        id=\"nameFilter\"\r\n        type=\"text\"\r\n        onChange={(e) => setNameQuery(e.target.value)}\r\n        placeholder=\"Name\"\r\n      />\r\n      <Dropdown\r\n        id=\"cityDropdown\"\r\n        onSelected={(e) => setCityQuery(e?.value)}\r\n        options={dropdownOptions}\r\n      />\r\n      <Checkbox\r\n        id=\"isActiveCheckbox\"\r\n        label=\"Show active\"\r\n        icon={faEye}\r\n        isChecked={isActiveQuerry || false}\r\n        setIsChecked={() => setIsActiveQuerry(!isActiveQuerry)}\r\n      />\r\n      <div className={styles.buttonWrapper}>\r\n        <Button\r\n          onPress={() =>\r\n            onFilterCallback({ nameQuery, cityQuery, isActive: isActiveQuerry })\r\n          }\r\n        >\r\n          FILTER\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FilterSection };\r\n","import { Contact } from \"../../../../api/ContactService\";\r\n\r\nconst formatName = (name: string, surname: string) =>\r\n  `${name} ${surname.substr(0, 1)}.`;\r\n\r\nconst getFullName = (contact: Contact) => `${contact.name} ${contact.surname}`;\r\n\r\nexport { formatName, getFullName };\r\n","import React from \"react\";\r\nimport { Checkbox } from \"../../../../components\";\r\nimport styles from \"./styles.module.css\";\r\nimport { IFilterPopupProps, IFilterableFields } from \"./types\";\r\n\r\nconst FilterPopup = (props: IFilterPopupProps) => {\r\n  const { activeFields, onValueChange } = props;\r\n\r\n  const toggleField = (value: keyof IFilterableFields) => {\r\n    const result = { ...activeFields, [value]: !activeFields[value] };\r\n    onValueChange(result);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filterModal}>\r\n      {Object.keys(activeFields).map((field) => (\r\n        <Checkbox\r\n          isChecked={activeFields[field as keyof IFilterableFields]}\r\n          id={`${field}-checkbox`}\r\n          key={`${field}-checkbox`}\r\n          setIsChecked={() => toggleField(field as keyof IFilterableFields)}\r\n          label={<span className={styles.filterModalLabel}>{field}</span>}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { FilterPopup };\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./styles.module.css\";\r\nimport ITableSectionProps from \"./types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEye,\r\n  faEyeSlash,\r\n  faList,\r\n  faArrowDown,\r\n  faArrowUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { formatName } from \"../../utils/nameFormatter\";\r\nimport { FilterPopup } from \"../filterPopup\";\r\n\r\nconst TableSection = (props: ITableSectionProps) => {\r\n  const { data, onCellPress, activeContactId, onSortPress, isAscending } =\r\n    props;\r\n\r\n  const [activeFields, setActiveFields] = useState({\r\n    Name: true,\r\n    City: true,\r\n    Email: true,\r\n    Phone: true,\r\n  }\r\n  );\r\n  const [isFilterPopupActive, setIsFilterPopupActive] = useState(false);\r\n\r\n  return (\r\n    <>\r\n    <table\r\n      className={`${styles.table} ${activeContactId && styles.tableActive}`}\r\n    >\r\n      <thead className={styles.tableHeader}>\r\n        <tr>\r\n          {activeFields.Name && <th onClick={onSortPress}>\r\n            Name\r\n            <span className={styles.iconSeperator}>\r\n              {isAscending !== undefined && (\r\n                <FontAwesomeIcon icon={isAscending ? faArrowDown : faArrowUp} />\r\n              )}\r\n            </span>\r\n          </th>}\r\n          {activeFields.City &&<th>City</th>}\r\n          <th />\r\n          {activeFields.Email && <th>Email</th>}\r\n          {activeFields.Phone && <th>Phone</th>}\r\n          <th\r\n            onClick={() => setIsFilterPopupActive((prev) => !prev)}\r\n            className={isFilterPopupActive ? styles.activeFilter : undefined}\r\n          >\r\n            {<FontAwesomeIcon icon={faList} />}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((contact) => (\r\n          <tr\r\n            key={`row-${contact.id}`}\r\n            onClick={() => onCellPress(contact.id)}\r\n            className={`\r\n              ${styles.tableRow} \r\n              ${isFilterPopupActive && styles.tableRowDark}\r\n              ${activeContactId === contact.id && (isFilterPopupActive ? styles.tableRowActiveDark : styles.tableRowActive)}`\r\n            }\r\n          >\r\n            {activeFields.Name && <td key={`cell-${contact.id}-name`}>\r\n              {formatName(contact.name, contact.surname)}\r\n            </td>}\r\n            {activeFields.City && <td key={`cell-${contact.id}-city`}>{contact.city}</td>}\r\n            <td key={`cell-${contact.id}-active`}>\r\n              {<FontAwesomeIcon icon={contact.isActive ? faEye : faEyeSlash} />}\r\n            </td>\r\n            {activeFields.Email && <td key={`cell-${contact.id}-email`}>{contact.email}</td>}\r\n           {activeFields.Phone && <td key={`cell-${contact.id}-phone`}>{contact.phone}</td>}\r\n            <td key={`cell-${contact.id}-filter`} />\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n    {isFilterPopupActive && <FilterPopup activeFields={activeFields} onValueChange={setActiveFields}/>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { TableSection };\r\n","import React from \"react\";\r\nimport { Loader } from \"../../../../components\";\r\nimport { formatName } from \"../../utils/nameFormatter\";\r\nimport styles from \"./styles.module.css\";\r\nimport IDetailsSectionProps from \"./types\";\r\n\r\nconst DetailsSection = (props: IDetailsSectionProps) => {\r\n  const { contact, photoUrl, isLoading } = props;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.content}>\r\n        <Loader isLoading={isLoading}>\r\n          {contact && (\r\n            <>\r\n              <div className={styles.imageContainer}>\r\n                <img\r\n                  src={photoUrl}\r\n                  alt=\"Contact person\"\r\n                  className={styles.image}\r\n                />\r\n              </div>\r\n              <div className={styles.detailsContainer}>\r\n                <div>\r\n                  <p>Name:</p>\r\n                  <p>City:</p>\r\n                  <p>Email:</p>\r\n                  <p>Phone:</p>\r\n                </div>\r\n                <div>\r\n                  <p>{formatName(contact.name, contact.surname)}</p>\r\n                  <p>{contact.city}</p>\r\n                  <a href={`mailto:${contact.email}`}>{contact.email}</a>\r\n                  <p>{contact.phone}</p>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Loader>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { DetailsSection };\r\n","export default __webpack_public_path__ + \"static/media/userpic.a2e113e8.jpg\";","import { Contact } from \"../../../../api/ContactService\";\r\nimport { getFullName } from \"./nameFormatter\";\r\n\r\nconst sortByName = (contacts: Contact[], ascending?: boolean) => {\r\n  const sortedAsc = [...contacts].sort((a, b) => {\r\n    const aFullName = getFullName(a);\r\n    const bFullName = getFullName(b);\r\n    return aFullName > bFullName ? 1 : bFullName > aFullName ? -1 : 0;\r\n  });\r\n  return ascending ? sortedAsc : sortedAsc.reverse();\r\n};\r\n\r\nexport { sortByName };\r\n","import { connect, MapStateToProps } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"../../../redux/store\";\r\nimport {\r\n  getContacts,\r\n  fetchContactsAsync,\r\n  getIsContactsLoading,\r\n  getIsContactsFetched,\r\n  getContactDetails,\r\n  getIsContactDetailsLoading,\r\n} from \"../../../redux/contact\";\r\nimport { IDispatchProps, IReduxProps } from \"./types\";\r\nimport { Contacts as ContactsPage } from \"./contacts\";\r\nimport { fetchContactByIdAsync } from \"../../../redux/contact/thunk\";\r\n\r\nconst mapStateToProps: MapStateToProps<IReduxProps, {}, RootState> = (\r\n  state\r\n) => ({\r\n  contacts: getContacts(state),\r\n  isLoading: getIsContactsLoading(state),\r\n  isFetched: getIsContactsFetched(state),\r\n  contactDetails: getContactDetails(state),\r\n  isContactDetailsLoading: getIsContactDetailsLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch): IDispatchProps => ({\r\n  fetchContactsAsync: () => dispatch(fetchContactsAsync()),\r\n  fetchContactByIdAsync: (id: string) => dispatch(fetchContactByIdAsync(id)),\r\n});\r\n\r\nconst Contacts = connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\r\n\r\nexport { Contacts };\r\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { IContactsProps, IFilterProps } from \"./types\";\nimport { Loader, AppLogo } from \"../../components\";\nimport { DetailsSection, FilterSection, TableSection } from \"./components\";\nimport userPic from \"../../assets/userpic.jpg\";\nimport { sortByName } from \"./utils/contactSorter\";\nimport {\n  filterByActive,\n  filterByCity,\n  filterByName,\n} from \"./utils/contactFilter\";\n\nexport const Contacts = (props: IContactsProps) => {\n  const {\n    isLoading,\n    isFetched,\n    fetchContactsAsync,\n    contacts,\n    isContactDetailsLoading,\n    contactDetails,\n    fetchContactByIdAsync,\n  } = props;\n\n  const [contactsLocal, setContactsLocal] = useState(contacts);\n  const [isAscending, setIsAscending] =\n    useState<boolean | undefined>(undefined);\n\n  useEffect(() => {\n    if (!isFetched && !isLoading) {\n      fetchContactsAsync();\n    }\n  }, [fetchContactsAsync, isFetched, isLoading]);\n\n  useEffect(() => {\n    setContactsLocal(contacts);\n  }, [contacts]);\n\n  const onTableItemPress = (id: string) => {\n    fetchContactByIdAsync(id);\n  };\n\n  const sortData = () => {\n    setContactsLocal((cnt) => sortByName(cnt, isAscending ? false : true));\n    setIsAscending((asc) => !asc);\n  };\n\n  const filterData = ({ nameQuery, cityQuery, isActive }: IFilterProps) => {\n    let result = [...contacts];\n    result = filterByName([...contacts], nameQuery);\n    result = filterByCity(result, cityQuery);\n    result = filterByActive(result, isActive);\n    if (isAscending !== undefined) {\n      result = sortByName(result, isAscending ? false : true);\n    }\n    setContactsLocal(result);\n  };\n\n  const shouldShowDetails =\n    (contactDetails &&\n      contactsLocal.find((contact) => contact.id === contactDetails.id)) ||\n    isContactDetailsLoading;\n\n  return (\n    <div className={styles.background}>\n      <Loader isLoading={isLoading} isAbsolute>\n        <div className={styles.container}>\n          <div className={styles.mainSection}>\n            <FilterSection\n              dropdownOptions={[\n                { label: \"City\", value: \"\" },\n                ...contacts.map((contact) => ({\n                  label: contact.city,\n                  value: contact.city,\n                })),\n              ]}\n              onFilterCallback={filterData}\n            />\n            <TableSection\n              data={contactsLocal}\n              onCellPress={onTableItemPress}\n              activeContactId={contactDetails?.id}\n              onSortPress={sortData}\n              isAscending={isAscending}\n            />\n          </div>\n          <div className={styles.flexGrid}>\n            <AppLogo />\n            {shouldShowDetails && (\n              <DetailsSection\n                contact={contactDetails}\n                photoUrl={userPic}\n                isLoading={isContactDetailsLoading}\n              />\n            )}\n          </div>\n        </div>\n      </Loader>\n    </div>\n  );\n};\n","import { Contact } from \"../../../../api/ContactService\";\r\nimport { getFullName } from \"./nameFormatter\";\r\n\r\nconst filterByName = (contacts: Contact[], query?: string) => {\r\n  if (query) {\r\n    return contacts.filter((contact) =>\r\n      getFullName(contact).toLowerCase().includes(query.toLowerCase())\r\n    );\r\n  }\r\n  return contacts;\r\n};\r\n\r\nconst filterByCity = (contacts: Contact[], city?: string) => {\r\n  if (city) {\r\n    return contacts.filter((contact) => contact.city === city);\r\n  }\r\n  return contacts;\r\n};\r\n\r\nconst filterByActive = (contacts: Contact[], isActive?: boolean) => {\r\n  if (isActive) {\r\n    return contacts.filter((contact) => contact.isActive);\r\n  }\r\n  return contacts;\r\n};\r\n\r\nexport { filterByName, filterByCity, filterByActive };\r\n","import React from \"react\";\nimport { Contacts } from \"./containers\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contactSlice } from \"./contact\";\n\nexport const store = configureStore({\n  reducer: {\n    contact: contactSlice.reducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./react/App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}